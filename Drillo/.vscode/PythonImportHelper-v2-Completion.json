[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "staticfiles_storage",
        "importPath": "django.contrib.staticfiles.storage",
        "description": "django.contrib.staticfiles.storage",
        "isExtraImport": true,
        "detail": "django.contrib.staticfiles.storage",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "NoReverseMatch",
        "importPath": "django.urls.exceptions",
        "description": "django.urls.exceptions",
        "isExtraImport": true,
        "detail": "django.urls.exceptions",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "Environment",
        "importPath": "jinja2",
        "description": "jinja2",
        "isExtraImport": true,
        "detail": "jinja2",
        "documentation": {}
    },
    {
        "label": "FileSystemLoader",
        "importPath": "jinja2",
        "description": "jinja2",
        "isExtraImport": true,
        "detail": "jinja2",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "ModelAdmin",
        "importPath": "unfold.admin",
        "description": "unfold.admin",
        "isExtraImport": true,
        "detail": "unfold.admin",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "drillo.asgi",
        "description": "drillo.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "drillo.asgi",
        "documentation": {}
    },
    {
        "label": "environment",
        "kind": 2,
        "importPath": "drillo.jinja2",
        "description": "drillo.jinja2",
        "peekOfCode": "def environment(**options):\n    env = Environment(**options)\n    env.loader = FileSystemLoader(settings.JINJA2_TEMPLATE_DIRS)\n    try:\n        # Set the value for the 'static' function in the Jinja2 environment globals\n        env.globals['static'] = staticfiles_storage.url\n    except NoReverseMatch:\n        pass\n    env.globals['url'] = reverse\n    return env",
        "detail": "drillo.jinja2",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "drillo.settings",
        "description": "drillo.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-21=+!uuy3k_c&osd)gi7k_r1dd%)h9iz6g_26e%pg9i&ba7=5q'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = os.getenv('DEBUG')\nALLOWED_HOSTS = os.environ.get('HOSTS').split(' ')\n# Application definition\nINSTALLED_APPS = [",
        "detail": "drillo.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "drillo.settings",
        "description": "drillo.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-21=+!uuy3k_c&osd)gi7k_r1dd%)h9iz6g_26e%pg9i&ba7=5q'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = os.getenv('DEBUG')\nALLOWED_HOSTS = os.environ.get('HOSTS').split(' ')\n# Application definition\nINSTALLED_APPS = [\n    'unfold',\n    'jinja2',\n    'django.contrib.admin',\n    'django.contrib.auth',",
        "detail": "drillo.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "drillo.settings",
        "description": "drillo.settings",
        "peekOfCode": "DEBUG = os.getenv('DEBUG')\nALLOWED_HOSTS = os.environ.get('HOSTS').split(' ')\n# Application definition\nINSTALLED_APPS = [\n    'unfold',\n    'jinja2',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "drillo.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "drillo.settings",
        "description": "drillo.settings",
        "peekOfCode": "ALLOWED_HOSTS = os.environ.get('HOSTS').split(' ')\n# Application definition\nINSTALLED_APPS = [\n    'unfold',\n    'jinja2',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "drillo.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "drillo.settings",
        "description": "drillo.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'unfold',\n    'jinja2',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    # RestFramework",
        "detail": "drillo.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "drillo.settings",
        "description": "drillo.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'drillo.urls'",
        "detail": "drillo.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "drillo.settings",
        "description": "drillo.settings",
        "peekOfCode": "ROOT_URLCONF = 'drillo.urls'\nJINJA2_TEMPLATE_DIRS = [os.path.join(BASE_DIR, 'templates')]\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.jinja2.Jinja2\",\n        'DIRS': [\n            'templates',\n        ],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {",
        "detail": "drillo.settings",
        "documentation": {}
    },
    {
        "label": "JINJA2_TEMPLATE_DIRS",
        "kind": 5,
        "importPath": "drillo.settings",
        "description": "drillo.settings",
        "peekOfCode": "JINJA2_TEMPLATE_DIRS = [os.path.join(BASE_DIR, 'templates')]\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.jinja2.Jinja2\",\n        'DIRS': [\n            'templates',\n        ],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"environment\": \"drillo.jinja2.environment\"",
        "detail": "drillo.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "drillo.settings",
        "description": "drillo.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.jinja2.Jinja2\",\n        'DIRS': [\n            'templates',\n        ],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"environment\": \"drillo.jinja2.environment\"\n        },",
        "detail": "drillo.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "drillo.settings",
        "description": "drillo.settings",
        "peekOfCode": "WSGI_APPLICATION = 'drillo.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "drillo.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "drillo.settings",
        "description": "drillo.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "drillo.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "drillo.settings",
        "description": "drillo.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "drillo.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "drillo.settings",
        "description": "drillo.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'staticfiles')\n]",
        "detail": "drillo.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "drillo.settings",
        "description": "drillo.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'staticfiles')\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')",
        "detail": "drillo.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "drillo.settings",
        "description": "drillo.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'staticfiles')\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\n# Default primary key field type",
        "detail": "drillo.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "drillo.settings",
        "description": "drillo.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'staticfiles')\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field",
        "detail": "drillo.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "drillo.settings",
        "description": "drillo.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'staticfiles')\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "drillo.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "drillo.settings",
        "description": "drillo.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'staticfiles')\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "drillo.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "drillo.settings",
        "description": "drillo.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'static')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "drillo.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "drillo.settings",
        "description": "drillo.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "drillo.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "drillo.urls",
        "description": "drillo.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('event/', include('eventman.urls')),\n    path('', views.home, name='home'),\n]",
        "detail": "drillo.urls",
        "documentation": {}
    },
    {
        "label": "home",
        "kind": 2,
        "importPath": "drillo.views",
        "description": "drillo.views",
        "peekOfCode": "def home(request):\n    context = {'title': 'My Page'}\n    return render(request, 'index.html', context)",
        "detail": "drillo.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "drillo.wsgi",
        "description": "drillo.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "drillo.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "eventman.migrations.0001_initial",
        "description": "eventman.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"Hero\",\n            fields=[\n                (\n                    \"id\",\n                    models.BigAutoField(",
        "detail": "eventman.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "eventman.migrations.0002_formsubmission_delete_hero",
        "description": "eventman.migrations.0002_formsubmission_delete_hero",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"eventman\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"FormSubmission\",\n            fields=[\n                (\n                    \"id\",",
        "detail": "eventman.migrations.0002_formsubmission_delete_hero",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "eventman.migrations.0003_formsubmission_slug",
        "description": "eventman.migrations.0003_formsubmission_slug",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"eventman\", \"0002_formsubmission_delete_hero\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"formsubmission\",\n            name=\"slug\",\n            field=models.SlugField(default=\"sample\", max_length=255, unique=True),\n            preserve_default=False,",
        "detail": "eventman.migrations.0003_formsubmission_slug",
        "documentation": {}
    },
    {
        "label": "EventmanConfig",
        "kind": 6,
        "importPath": "eventman.apps",
        "description": "eventman.apps",
        "peekOfCode": "class EventmanConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"eventman\"",
        "detail": "eventman.apps",
        "documentation": {}
    },
    {
        "label": "FormSubmissionForm",
        "kind": 6,
        "importPath": "eventman.forms",
        "description": "eventman.forms",
        "peekOfCode": "class FormSubmissionForm(forms.ModelForm):\n    class Meta:\n        model = FormSubmission\n        fields = ('name', 'email', 'message', 'page_url')",
        "detail": "eventman.forms",
        "documentation": {}
    },
    {
        "label": "FormSubmission",
        "kind": 6,
        "importPath": "eventman.models",
        "description": "eventman.models",
        "peekOfCode": "class FormSubmission(models.Model):\n    name = models.CharField(max_length=255)\n    email = models.EmailField()\n    message = models.TextField()\n    page_url = models.CharField(max_length=255)\n    slug = models.SlugField(unique=True, max_length=255)\n    def save(self, *args, **kwargs):\n        self.slug = f\"{self.name.replace(' ', '-').lower()}-{self.name.replace(' ', '-').lower()}\"\n        super(FormSubmission, self).save(*args, **kwargs)\n    def get_absolute_url(self):",
        "detail": "eventman.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "eventman.urls",
        "description": "eventman.urls",
        "peekOfCode": "urlpatterns = [\n    path('submit-form', form_submission, name='form_submission'),\n    path('page-preview/<slug:slug>/', page_preview, name='page_preview'),\n]",
        "detail": "eventman.urls",
        "documentation": {}
    },
    {
        "label": "form_submission",
        "kind": 2,
        "importPath": "eventman.views",
        "description": "eventman.views",
        "peekOfCode": "def form_submission(request):\n    if request.method == 'POST':\n        form = FormSubmissionForm(request.POST)\n        if form.is_valid():\n            submission = form.save(commit=False)\n            submission.slug = slugify(submission.title)\n            submission.save()\n            url = reverse('page_preview', args=[submission.slug])\n            return redirect(url)\n    else:",
        "detail": "eventman.views",
        "documentation": {}
    },
    {
        "label": "page_preview",
        "kind": 2,
        "importPath": "eventman.views",
        "description": "eventman.views",
        "peekOfCode": "def page_preview(request,slug):\n    submission = FormSubmission.objects.get(slug=slug)\n    return render(request, 'rendered-page.jinja', {'submission': submission})",
        "detail": "eventman.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'drillo.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]